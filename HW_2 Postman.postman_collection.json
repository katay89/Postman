{
	"info": {
		"_postman_id": "fc882991-7894-4f04-ba85-62566bcf1d1a",
		"name": "HW_2 Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24975156"
	},
	"item": [
		{
			"name": "/first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{ip_port}}/first",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\"//Cтатус код 200\"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"let req_f = request.data\r",
							"let resp_f = pm.response.json();\r",
							"let req_name = req_f.name\r",
							"let resp_name = resp_f.name\r",
							"let req_age = req_f.age\r",
							"let resp_age = resp_f.age\r",
							"let req_salary = req_f.salary\r",
							"let resp_salary = resp_f.salary\r",
							"let resp_salary_1_5_years = resp_f.family.u_salary_1_5_year\r",
							"let family = resp_f.family\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\"//Проверить, что name в ответе равно name s request (name вбить руками.)\"\r",
							"pm.test(\"Check_name\", function () {\r",
							"       pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"\"//Проверить, что age в ответе равно age s request (age вбить руками.)\"\r",
							"pm.test(\"Check_age\", function () {\r",
							"       pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"\"//Проверить, что salary в ответе равно salary s request (salary вбить руками.)\"\r",
							"pm.test(\"Check_salary\", function () {\r",
							"       pm.expect(+resp_salary).to.eql(+req_salary);\r",
							"});\r",
							"\r",
							"\"//Спарсить request\"\r",
							"var req = request.data\r",
							"\r",
							"\"//Проверить, что name в ответе равно name s request (name забрать из request.)\"\r",
							"pm.test(\"Check_resp_name\", function () {\r",
							"       pm.expect(resp_f.name).to.eql(req_f.name);\r",
							"});\r",
							"\r",
							"\"//Проверить, что age в ответе равно age s request (age забрать из request.)\"\r",
							"pm.test(\"Check_resp_age\", function () {\r",
							"       pm.expect(resp_f.age).to.eql(req_f.age);\r",
							"});\r",
							"\r",
							"\"//Проверить, что salary в ответе равно salary s request (salary забрать из request.)\"\r",
							"pm.test(\"Check_resp_salary\", function () {\r",
							"       pm.expect(resp_f.salary).to.eql(+req_f.salary);\r",
							"});\r",
							"\r",
							"\r",
							"\"//Вывести в консоль параметр family из response.\"\r",
							"console.log(family)\r",
							"\r",
							"\"//Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\"\r",
							"pm.test(\"Check_salary_1_5_year\", function () {\r",
							"       pm.expect(resp_salary_1_5_years).to.eql(req_salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		}
	]
}